#!/usr/bin/env node
'use strict';

require('colorful').colorful();
var debug = require('debug')('amb:build');
var join = require('path').join;
var program = require('commander');
var extend = require('extend');
var log = require('spm-log');
var config = require('../lib/config');
var build = require('../lib/build');
var install = require('../lib/client').install;

program
  .option('-f, --force', 'clean dist directory before build')
  .parse(process.argv);

console.log();
var p = require(join(process.cwd(), 'package.json'));
if (!p || !p.spm) {
  log.error('miss', 'package.json or "spm" key');
  process.exit(1);
}

var info = ('build ' + p.name + '@' + p.version).to.magenta.color;
var begin = Date.now();
log.info('start', info);

var args = extend(config.get(), {
  cwd: process.cwd(),
  force: program.force
});

debug('args', args);

// install and build
install(args, function(err) {
  if (err) {
    log.error('error', err.message);
    log.debug('error', err.stack);
    process.exit(1);
  }

  build(args, function(err) {
    if (err) {
      log.error('error', err.message);
      log.debug('error', err.stack);
      process.exit(1);
    }
    log.info('finish', info + showDiff(begin));
  });
});

function showDiff(time) {
  var diff = Date.now() - time;
  return (' (' + diff + 'ms)').to.gray.color;
}

